<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_15401_data_gover.InsertRecordsIntoManyTable</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>InsertRecordsIntoManyTable</name>
        <script><![CDATA[var InsertRecordsIntoManyTable = Class.create();
InsertRecordsIntoManyTable.prototype = {
	initialize: function() {
	},
	
	//QueryTable = Table to get Information From
	//InsertTable = Table to put in Information
	//QueryField = Field on the Query Table to Get the Information
	//QueryValue = Value to Query and Insert Into the Table
	//InsertField = The Field to Insert the Query Value Into
	//InsertField2 = The Other Field to Put In the Information
	//InsertValue = Name of column to get Value to Insert
	insertRecords : function(queryTable, insertTable, queryField, queryValue, insertField, insertField2, insertValue ) {
		var lookup = new GlideRecord(queryTable);
		lookup.addQuery(queryField, queryValue);
		lookup.query();
		while(lookup.next()) {
			var insertRecord = new GlideRecord(insertTable);
			insertRecord.addQuery(insertField, queryValue);
			insertRecord.addQuery(insertField2, lookup.getValue(insertValue));
			insertRecord.query();
			//Make sure we haven't already inserted it
			if(insertRecord.hasNext()) {
				continue;
			}
			insertRecord.initialize();
			insertRecord.setValue(insertField, queryValue);
			insertRecord.setValue(insertField2, lookup.getValue(insertValue));
			insertRecord.initialize();
		}
	},
	
	//QueryTable = Table to get information form
	//EncodedQuery = Query to get the information
	//InsertTable = Table to store information
	//InsertField = Name of Field to Insert Information
	//InsertField2 = Second Field to Insert Information
	//Current = The id of store with InsertField
	//LookupValue = The Value to get from the EncodedQuery
	insertEncodedRecords : function (queryTable, encodedQuery, insertTable, insertField, insertField2, current, lookupValue) {
		var lookup = new GlideRecord(queryTable);
		lookup.addEncodedQuery(encodedQuery);
		lookup.query();
		while(lookup.next()) {
			var addRecord = new GlideRecord(insertTable);
			addRecord.addQuery(insertField, current);
			addRecord.addQuery(insertField2, lookup.getValue(lookupValue));
			addRecord.query();
			//Make sure we haven't inserted it already
			if(addRecord.hasNext()) {
				continue;
			}
			addRecord.initialize();
			addRecord.setValue(insertField, current);
			addRecord.setValue(insertField2, lookup.getValue(lookupValue));
			addRecord.insert();
		}
	},
	
	//QueryTable = Table to get information form
	//EncodedQuery = Query to get the information
	//LookupTable = Table to get sys_id of Many to Many Table
	//InsertTable = Table to store information
	//InsertField = Name of Field to Insert Information
	//InsertField2 = Second Field to Insert Information
	//Current = The id of store with InsertField
	//LookupValue = The Value to get from the EncodedQuery
	insertEncodedRecordsM2M : function (queryTable, encodedQuery, lookupTable, insertTable, insertField, insertField2, current, lookupValue) {
		var lookup = new GlideRecord(queryTable);
		lookup.addEncodedQuery(encodedQuery);
		lookup.query();
		while(lookup.next()) {
			var checkTable = new GlideRecord(lookupTable);
			if(checkTable.get(lookup.getValue(lookupValue))) {
				var addRecord = new GlideRecord(insertTable);
				addRecord.addQuery(insertField, current);
				addRecord.addQuery(insertField2, checkTable.getValue(insertField2));
				addRecord.query();
				//Make sure we haven't inserted it already
				if(addRecord.hasNext()) {
					continue;
				}
				addRecord.initialize();
				addRecord.setValue(insertField, current);
				addRecord.setValue(insertField2, checkTable.getValue(insertField2));
				addRecord.insert();
			}
		}
	},
	
	type: 'InsertRecordsIntoManyTable'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>thirschi</sys_created_by>
        <sys_created_on>2019-01-15 01:31:11</sys_created_on>
        <sys_id>6f7dc0090fc3230055498f8ce1050ec7</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>InsertRecordsIntoManyTable</sys_name>
        <sys_package display_value="Data Governance" source="x_15401_data_gover">b869600e0f12230055498f8ce1050e47</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Data Governance">b869600e0f12230055498f8ce1050e47</sys_scope>
        <sys_update_name>sys_script_include_6f7dc0090fc3230055498f8ce1050ec7</sys_update_name>
        <sys_updated_by>thirschi</sys_updated_by>
        <sys_updated_on>2019-02-24 05:58:41</sys_updated_on>
    </sys_script_include>
</record_update>
